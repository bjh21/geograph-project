#!/bin/sh
set -eu
cat <<EOF
#########################################################
#template index, just used to define the database creditals. 

source db_slave
{
        type                    = mysql

        sql_host                = $MYSQL_HOST

        sql_user                = $MYSQL_USER
        sql_pass                = $MYSQL_PASSWORD
        sql_db                  = $MYSQL_DATABASE
        sql_port                = 3306
}

#########################################################
# a basic index just to test

source srctoy : db_slave
{
        sql_query               = \
                SELECT SQL_NO_CACHE gridimage_id,title,realname,user_id FROM image_dump

        sql_field_string = title
        sql_field_string = realname
        sql_attr_uint = user_id
}

index toy
{
        source                  = srctoy
        path                    = /var/lib/manticore/data/toy
        min_word_len            = 1
}

#########################################################
# minimal config that should get a functional instance. 

searchd
{
	#we mainly use the mysql protocol, but setup the legacy API too. 
        listen = 9312
        listen = 9306:mysql41

        log                     = /var/log/manticore/searchd.log

	#query log is optional, but recomemdned. 
        query_log               = /var/log/manticore/query.log

	##this needs to be defined even if not using a binlog!
        binlog_path = /var/lib/manticore/binlog

	##just a suitable value for the test enviroment
        max_children            = 10

        # MUST be present to allow indexer/searchd to communicate
        pid_file                = /var/run/manticore/searchd.pid
	
	#this file defines some sphinx plugins!
        sphinxql_state = /etc/sphinxsearch/sphinxql_state.sql

	##workers needed for the plugin to work!
        workers=threads
}

common {
	#folder for sphinx plugins, copy the .so files from this repository. 
        plugin_dir = /usr/lib/manticore/plugins
}

#########################################################
EOF
