#!/bin/sh
set -eu
cat <<EOF

#############################################
#this index's, sole purpose is to run updates. So that the real "gridimage" index can connect to replica/slave

source gridimage_master : db_master
{
	sql_query_pre           = SELECT @myself := '$HOSTNAME'

##sharding setup
        sql_query_pre           = REPLACE INTO sph_counter SELECT 'gridimage_search', MAX(gridimage_id)-1500,@myself as server_id, NOW() FROM gridimage_search

##snippet
#        sql_query_pre           = DROP TABLE IF EXISTS geograph_tmp.gridimage_snippet_text
#        sql_query_pre           = \
#		CREATE TABLE geograph_tmp.gridimage_snippet_text \
#		SELECT gridimage_id, GROUP_CONCAT(gs.snippet_id) AS snippet_id, GROUP_CONCAT(s.comment) AS snippet, GROUP_CONCAT(s.title) AS snippet_title \
#		FROM gridimage_snippet gs \
#		INNER JOIN snippet s USING (snippet_id) \
#		WHERE gridimage_id < 4294967296 AND enabled = 1 \
#		GROUP BY gridimage_id
#	sql_query_pre           = ALTER TABLE geograph_tmp.gridimage_snippet_text ADD PRIMARY KEY (gridimage_id)

	#something really trivial, but got most compatiblity, return a text field. Never searched, so doesnt matter what contains
	# the 30 seconds, is HOPEFULLY to give the slave time to run the above gridimage_snippet_text query.
	sql_query 		= SELECT gridimage_id, title, SLEEP(30) AS dummy FROM gridimage_search LIMIT 1
}

#############################################

source gridimage : db_slave
{
        sql_query_pre           = SET CHARACTER SET 'utf8'
        sql_query_pre           = SET SESSION query_cache_type=OFF
        sql_query_pre           = SET SESSION group_concat_max_len = 100000

	sql_query_pre           = SELECT @myself := '$HOSTNAME'

#range
        sql_query_range         = SELECT 1, max_doc_id FROM sph_counter WHERE counter_id='gridimage_search' and server_id=@myself
        sql_range_step          = 50000

#main query
        sql_query               = \
                SELECT gi.gridimage_id, UNIX_TIMESTAMP(gi.submitted) AS submitted, TO_DAYS(REPLACE(gi.imagetaken,'-00','-01')) AS takendays, gi.user_id, \
                gi.title, gi.comment, gi.imageclass, gi.realname, gi.grid_reference, \
                snippet_id, snippet, snippet_title, IF(tags!='',CONCAT('__TAG__ ',REPLACE(REPLACE(tags,'?',' __TAG__ '),':',' __TAG__ '),' __TAG__'),'null') AS tags, \
                SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-4) AS myriad, \
                CONCAT(SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-3),SUBSTRING(gi.grid_reference,LENGTH(gi.grid_reference)-1,1)) AS hectad, \
                REPLACE(gi.imagetaken,'-','') AS takenday, REPLACE(substring(gi.imagetaken,1,7),'-','') AS takenmonth, substring(gi.imagetaken,1,4) AS takenyear, \
		coalesce(MONTHNAME(gi.imagetaken),'Unknown') AS month, substring(gi.imagetaken,1,4) AS atakenyear, \
                RADIANS(gi.wgs84_lat) AS wgs84_lat,RADIANS(gi.wgs84_long) AS wgs84_long, \
                IF(gi.moderation_status='accepted','supplemental',gi.moderation_status) AS status, gi.ftf, gi.points, \
                CRC32(LOWER(gi.imageclass)) AS classcrc, LENGTH(gi.comment) AS clen, \
                (gi.reference_index * 1000000 + (viewpoint_northings DIV 1000) * 1000 + viewpoint_eastings DIV 1000) AS viewsquare, \
                gi.user_id AS auser_id, \
		sequence, \
		UNIX_TIMESTAMP(REPLACE(gi.imagetaken,'-00','-01')) AS aimagetaken, \
		IF(gi.moderation_status = 'accepted' AND g2.nateastings>0 AND viewpoint_eastings>0 AND (g2.nateastings DIV 1000 != viewpoint_eastings DIV 1000 OR g2.natnorthings DIV 1000 != viewpoint_northings DIV 1000),'crossgrid','') AS grid, \
                conv(gi.grid_reference,36,10) as agridsquare, \
                conv(SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-4),36,10) AS amyriad, \
                conv(CONCAT(SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-3),SUBSTRING(gi.grid_reference,LENGTH(gi.grid_reference)-1,1)),36,10) AS ahectad, \
                (gi.reference_index * 1000000000 + IF(g2.natgrlen+0 <= 3,(g2.nateastings DIV 100) * 100000 + (g2.natnorthings DIV 100),0)) AS scenti \
                FROM gridimage_search gi\
                        INNER JOIN gridimage g2 USING (gridimage_id) \
                        LEFT JOIN geograph_tmp.gridimage_snippet_text gs USING (gridimage_id) \
                WHERE gi.gridimage_id>=\$start AND gi.gridimage_id<=\$end 

#attributes
        sql_attr_timestamp      = submitted
        sql_attr_timestamp      = aimagetaken
#       sql_group_column        = viewsquare  #we do this a fulltext filter now
        sql_attr_uint           = takendays
        sql_attr_uint           = atakenyear
	sql_attr_uint           = classcrc
        sql_attr_uint           = clen
        sql_attr_uint           = auser_id
        sql_attr_uint           = sequence
        sql_attr_bigint         = agridsquare
        sql_attr_uint           = amyriad
        sql_attr_uint           = ahectad
        sql_attr_uint           = scenti
        sql_attr_float          = wgs84_lat
        sql_attr_float          = wgs84_long
}

source gi_delta : gridimage
{
        sql_query_pre           = SET CHARACTER SET 'utf8'
        sql_query_pre           = SET SESSION query_cache_type=OFF
        sql_query_pre           = SET SESSION group_concat_max_len = 100000

##sharding setup
	sql_query_pre           = SELECT @myself := '$HOSTNAME'

	sql_query_pre           = SELECT @max_doc_id := max_doc_id FROM sph_counter WHERE counter_id='gridimage_search' and server_id=@myself

##delta ids
	sql_query_pre           = CREATE TEMPORARY TABLE sph_delta_ids (primary key (gridimage_id)) \
		SELECT gridimage_id FROM gridimage_search WHERE gridimage_id > @max_doc_id OR upd_timestamp > date_sub(now(),interval 4 day)

	sql_query_pre           = insert ignore into sph_delta_ids select distinct gridimage_id FROM gridimage_tag WHERE updated > DATE_SUB(NOW(),interval 2 day) and gridimage_id < 4294967296

##snippet
        sql_query_pre           = CREATE TEMPORARY TABLE gridimage_snippet_text_delta (primary key (gridimage_id)) \
		SELECT gridimage_id, GROUP_CONCAT(gs.snippet_id) AS snippet_id, GROUP_CONCAT(s.comment) AS snippet, GROUP_CONCAT(s.title) AS snippet_title \
		FROM gridimage_snippet gs \
		INNER JOIN sph_delta_ids USING (gridimage_id) \
		LEFT JOIN snippet s USING (snippet_id) \
		WHERE enabled = 1 \
		GROUP BY gridimage_id

##range
        sql_query_range         = SELECT MIN(gridimage_id),MAX(gridimage_id) FROM sph_delta_ids
        sql_range_step          = 10000000

##main query
        sql_query               = \
                SELECT gi.gridimage_id, UNIX_TIMESTAMP(gi.submitted) AS submitted, TO_DAYS(REPLACE(gi.imagetaken,'-00','-01')) AS takendays, gi.user_id, \
                gi.title, gi.comment, gi.imageclass, gi.realname, gi.grid_reference, \
                snippet_id, snippet, snippet_title, IF(tags!='',CONCAT('__TAG__ ',REPLACE(REPLACE(tags,'?',' __TAG__ '),':',' __TAG__ '),' __TAG__'),'null') AS tags, \
                SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-4) AS myriad, \
                CONCAT(SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-3),SUBSTRING(gi.grid_reference,LENGTH(gi.grid_reference)-1,1)) AS hectad, \
                REPLACE(gi.imagetaken,'-','') AS takenday, REPLACE(substring(gi.imagetaken,1,7),'-','') AS takenmonth, substring(gi.imagetaken,1,4) AS takenyear, \
		coalesce(MONTHNAME(gi.imagetaken),'Unknown') AS month, substring(gi.imagetaken,1,4) AS atakenyear, \
                RADIANS(gi.wgs84_lat) AS wgs84_lat,RADIANS(gi.wgs84_long) AS wgs84_long, \
                IF(gi.moderation_status='accepted','supplemental',gi.moderation_status) AS status, gi.ftf, gi.points, \
                CRC32(LOWER(gi.imageclass)) AS classcrc, LENGTH(gi.comment) AS clen, \
                (gi.reference_index * 1000000 + (viewpoint_northings DIV 1000) * 1000 + viewpoint_eastings DIV 1000) AS viewsquare, \
                gi.user_id AS auser_id, \
                sequence, \
		UNIX_TIMESTAMP(REPLACE(gi.imagetaken,'-00','-01')) AS aimagetaken, \
		IF(gi.moderation_status = 'accepted' AND g2.nateastings>0 AND viewpoint_eastings>0 AND (g2.nateastings DIV 1000 != viewpoint_eastings DIV 1000 OR g2.natnorthings DIV 1000 != viewpoint_northings DIV 1000),'crossgrid','') AS grid, \
                conv(gi.grid_reference,36,10) as agridsquare, \
                conv(SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-4),36,10) AS amyriad, \
                conv(CONCAT(SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-3),SUBSTRING(gi.grid_reference,LENGTH(gi.grid_reference)-1,1)),36,10) AS ahectad, \
                (gi.reference_index * 1000000000 + IF(g2.natgrlen+0 <= 3,(g2.nateastings DIV 100) * 100000 + (g2.natnorthings DIV 100),0)) AS scenti \
                FROM gridimage_search gi\
			INNER JOIN sph_delta_ids USING (gridimage_id) \
                        INNER JOIN gridimage g2 USING (gridimage_id) \
                        LEFT JOIN gridimage_snippet_text_delta gs USING (gridimage_id) \
                WHERE (gi.gridimage_id>=\$start AND gi.gridimage_id<=\$end)

##killist
	sql_query_killlist = \
		SELECT gridimage_id FROM sph_delta_ids UNION \
		SELECT gridimage_id FROM gridimage WHERE moderation_status = 'rejected' AND upd_timestamp > date_sub(now(),interval 2 day)

##attributes
	#... inheritied!
}

#################

index gridimage_master
{
        type                    = plain
        source                  = gridimage_master
        path                    = /var/lib/manticore/data/gridimage_master
	docinfo			= none
}

#################


index gi_stemmed : latin1plus_encoded
{
	type			= plain
        source                  = gridimage
        path                    = /var/lib/manticore/data/gi_stemmed
        morphology              = stem_en
        index_exact_words       = 1
}
index gi_stemmed_delta : latin1plus_encoded
{
	type			= plain
        source                  = gi_delta
        path                    = /var/lib/manticore/data/gi_stemmed_delta
        morphology              = stem_en
        index_exact_words       = 1
}

EOF

